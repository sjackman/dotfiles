#!/bin/sh

# Operate on the body of a file but not the header
body() {
	IFS= read -r header
	printf '%s\n' "$header"
	eval $@
}

# Remove unused docker containers and images
docker-cleanup()
{
	docker rm `docker ps -aq`
	docker rmi `docker images --filter dangling=true --quiet`
}

# Move the specified files to a newly-created directory
stash()
{
	t=`gdate +'%Y-%m-%dT%H:%M'`
	mkdir $t && mv "$@" $t/ && echo $t || rmdir $t
}

# Remove duplicate elements
unique()
{
	awk '!x[$0]++' "$@"
}

# Add Homebrew kegs to the PATH
require()
{
	cellar=`brew --cellar`
	for i; do
		case $i in
			*/*)
				bin=$cellar/$i/bin
				;;
			*)
                keg=`brew --prefix $i`
				bin=`readlink -f $keg`/bin
				;;
		esac
		if [ -r $bin ]; then
			PATH=$bin:$PATH
		fi
	done
}

# Wrangle data with dplyr and tidyr
# This prototype does not work well. I often use datamash.
dplyr()
{
	Rscript \
	-e 'library(dplyr, warn.conflicts = FALSE)' \
	-e 'library(tidyr, warn.conflicts = FALSE)' \
	-e 'args <- commandArgs(trailingOnly = TRUE)' \
	-e 'f <- args[1]' \
	-e 'args <- as.list(args[-1])' \
	-e 'data <- read.delim(file("stdin"))' \
	-e 'output <- do.call(f, c(list(data), args))' \
	-e 'write.table(output, sep = "\\t", quote = FALSE, row.names = FALSE)' \
	"$@"
}

# Convert a DOI to bibtex
doi-bibtex()
{
	curl -LH "Accept: text/bibliography; style=bibtex" "http://dx.doi.org/$1"
}

# Daff a TSV/CSV file and open it in a browser
daff-render()
{
	daff $1 $2 >! $1-$2
	daff render --output $1-$2.html $1-$2
	open $1-$2.html
}
